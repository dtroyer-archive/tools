#!/bin/bash
# config-sudo - Configure sudo log rotation
# $Id: config-sudo 354 2008-02-25 00:51:55Z troyerdl $

PROG=`basename $0`
DIR=`dirname $0`
USAGE_TEXT="
$PROG - Configure something
$PROG [-h] [-V] [-f]
-f      Force download of new $SUDOERS_FILE file
-V      Verify configuration changes

sudo changes:
- installs template /etc/sudoers
- sets up /var/log/sudo.log
- sets up log rotation for sudo.log
"

DEF_MODE=644
DEF_OWNER=root:root

# Flag to force sudoers download
FORCE=0

SADIR=${SADIR:="/usr/local/sysadm"}
PSCDIR=${PSCDIR:="/tmp/PSC"}

. ${SADIR}/etc/depot.conf

LRSUDO=sudo
LRLOG=/var/log/sudo.log

SUDOERS_FILE=/etc/sudoers

#=============================
# Boilerplate functions
SAVE_EXT=orig-config

# save_orig_file makes a copy of the original file if it doesn't exist
# save_orig_file filename
save_orig_file() {
    if [ ! -e $1.$SAVE_EXT ]; then
        /bin/cp -p $1 $1.$SAVE_EXT
    fi
}

# set_file owner mode filename [filename ...]
set_file() {
    OWNER=$1; shift
    MODE=$1; shift
    FILE="$@"

    for i in $FILE; do
        if [ ! -e $i ]; then
            /bin/touch $i
        fi
    done

    /bin/chown $OWNER $FILE
    /bin/chmod $MODE $FILE
}

# test_file owner mode filename
# Returns: 1=file not found, 2=wrong permissions
test_file() {
    RET=0
    OWNER=$1; shift
    MODE=$1; shift
    FILE=$1

    if [ ! -e $FILE ]; then
        echo "$FILE not present"
        RET=1
    else
        X=`stat -c "%a %U %G" $1`
        set $X
        if [ $1 != $MODE ]; then
            echo "$FILE mode is $1, should be $MODE"
            RET=2
        fi
        if [ "$2:$3" != $OWNER ]; then
            echo "$FILE owner is $2:$3, should be $OWNER"
            RET=2
        fi
    fi
    return $RET
}
#=============================

# Make the actual changes
make_change() {

    if [ -z "`egrep 'logfile=/var/log/sudo.log' $SUDOERS_FILE`" \
      -o "$FORCE" = 1 ]; then
        # sudoers
        save_orig_file $SUDOERS_FILE
        if [ -f ${PSCDIR}/conf/sudoers ]; then
            /bin/cp -p ${PSCDIR}/conf/sudoers $SUDOERS_FILE
        else
            /usr/bin/wget -qN -O $SUDOERS_FILE $DEPOT_URL/local/conf/sudoers
#            /usr/bin/wget -qN -O $SUDOERS_FILE $DEPOT_URL/local/conf/sudoers-$SITE
            [ $? != 0 ] && /usr/bin/wget -qN -O $SUDOERS_FILE $DEPOT_URL/PSC/conf/sudoers
        fi
    fi
    set_file $DEF_OWNER 440 $SUDOERS_FILE

    # configure sudo log
    if [ -f ${PSCDIR}/conf/sudo.logrotate ]; then
        /bin/cp -p ${PSCDIR}/conf/sudo.logrotate /etc/logrotate.d/sudo
    else
        /usr/bin/wget -qN -O /etc/logrotate.d/sudo $DEPOT_URL/PSC/conf/sudo.logrotate
    fi
    set_file $DEF_OWNER $DEF_MODE /etc/logrotate.d/sudo
    set_file $DEF_OWNER 600 /var/log/sudo.log
}

# Test for changes
test_config() {
    RET=0

    test_file root:root 440 $SUDOERS_FILE
    [ $? != 0 ] && RET=1

    if [ $RET != 1 ]; then
        if [ -z "`egrep 'logfile=/var/log/sudo.log' $SUDOERS_FILE`" ]; then
            echo "Logfile not set in $SUDOERS_FILE"
            RET=1
        fi
    fi

    test_file root:root 644 /etc/logrotate.d/sudo
    [ $? != 0 ] && RET=1

    test_file root:root 600 /var/log/sudo.log
    [ $? != 0 ] && RET=1

    return $RET
}

usage() {
    echo $USAGE_TEXT
}

# Main processing

VERIFY=0
while getopts fhV c; do
    case $c in
        f)      FORCE=1
                ;;
        h)      usage;
                exit;
                ;;
    	V)	VERIFY=1
        	;;
    esac
done
shift `expr $OPTIND - 1`

# Verify running as root
if [ "$EUID" != 0 ]; then
    echo "Must be root to run $PROG"
    exit 1
fi

# Skip changes if this is a Verify run
if [ "$VERIFY" != 1 ]; then
    make_change
fi

test_config
exit $?
